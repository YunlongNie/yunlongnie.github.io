<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[A place for notes]]></title>
  <link href="http://YunlongNie.github.io/atom.xml" rel="self"/>
  <link href="http://YunlongNie.github.io/"/>
  <updated>2014-10-19T20:22:11-07:00</updated>
  <id>http://YunlongNie.github.io/</id>
  <author>
    <name><![CDATA[Ben(Yunlong)]]></name>
    <email><![CDATA[nyunlong@sfu.ca]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Chapter 5 estimating ceofficients from real data]]></title>
    <link href="http://YunlongNie.github.io/blog/2014/10/19/chapter-5-estimating-ceofficients-from-real-data/"/>
    <updated>2014-10-19T20:11:11-07:00</updated>
    <id>http://YunlongNie.github.io/blog/2014/10/19/chapter-5-estimating-ceofficients-from-real-data</id>
    <content type="html"><![CDATA[<h2 id="regression-approach">regression approach</h2>
<p>This is basically using least square to estimate the ceofficients of spline functions. </p>

<p><script type="math/tex">y_ j = x(t_j) + \epsilon_j = \phi'(t_j) \mathbf{c} + \epsilon_j,</script>
Then <script type="math/tex">\mathbf{y}  = \mathbf{Phi} \mathbf{c} + \mathbf{epsilon}</script> 
and <script type="math/tex">\hat{\mathbf{c}} = (\Phi'\Phi)^{-1} \Phi' \mathbf{y}.</script></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class=""><span class="line">#  define the range
</span><span class="line">Rng  = c(1,18)
</span><span class="line">age     = growth$age
</span><span class="line">agefine = seq(1,18,len=501)
</span><span class="line">#  set up order 6 spline basis with 12 basis functions for
</span><span class="line">#  fitting the growth data so as to estimate acceleration
</span><span class="line">nbasis = 12;
</span><span class="line">norder =  6;
</span><span class="line">heightbasis12 = create.bspline.basis(ageRng, nbasis, norder)
</span><span class="line">#  fit the data by least squares
</span><span class="line">basismat   = eval.basis(age, heightbasis12)
</span><span class="line">heightmat  = growth$hgtf
</span><span class="line">heightcoef = lsfit(basismat, heightmat, intercept=FALSE)$coef
</span><span class="line">
</span><span class="line"># heightcoef is a 12 * 54 matrix. Each column represents the ceofficients for 12 basis functions for each boy. </span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Useful R functions]]></title>
    <link href="http://YunlongNie.github.io/blog/2014/10/19/useful-r-functions/"/>
    <updated>2014-10-19T19:59:42-07:00</updated>
    <id>http://YunlongNie.github.io/blog/2014/10/19/useful-r-functions</id>
    <content type="html"><![CDATA[<p>Some useful R functions: </p>

<h2 id="dput-save-r"><code>dput</code>: save R</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
</pre></td><td class="code"><pre><code class="R"><span class="line">temp  <span class="o">=</span> <span class="kt">data.frame</span><span class="p">(</span>a <span class="o">=</span> rnorm<span class="p">(</span><span class="m">10</span><span class="p">),</span>b <span class="o">=</span> <span class="kc">LETTERS</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">])</span>
</span><span class="line">temp
</span><span class="line">            a b
</span><span class="line"><span class="m">1</span>   <span class="m">1.9106530</span> A
</span><span class="line"><span class="m">2</span>   <span class="m">0.5568481</span> B
</span><span class="line"><span class="m">3</span>  <span class="m">-2.0955271</span> C
</span><span class="line"><span class="m">4</span>  <span class="m">-0.4132244</span> D
</span><span class="line"><span class="m">5</span>   <span class="m">0.4280722</span> E
</span><span class="line"><span class="m">6</span>  <span class="m">-0.5981550</span> <span class="bp">F</span>
</span><span class="line"><span class="m">7</span>   <span class="m">0.4110932</span> G
</span><span class="line"><span class="m">8</span>  <span class="m">-0.8469106</span> H
</span><span class="line"><span class="m">9</span>  <span class="m">-0.3415771</span> <span class="kp">I</span>
</span><span class="line"><span class="m">10</span>  <span class="m">0.2930876</span> J
</span><span class="line"><span class="kp">dput</span><span class="p">(</span>temp<span class="p">)</span>
</span><span class="line"><span class="kp">structure</span><span class="p">(</span><span class="kt">list</span><span class="p">(</span>a <span class="o">=</span> <span class="kt">c</span><span class="p">(</span><span class="m">1.91065303013136</span><span class="p">,</span> <span class="m">0.556848072515929</span><span class="p">,</span> <span class="m">-2.09552705843547</span><span class="p">,</span>
</span><span class="line"><span class="m">-0.413224404461701</span><span class="p">,</span> <span class="m">0.428072223420949</span><span class="p">,</span> <span class="m">-0.598155043699695</span><span class="p">,</span> <span class="m">0.411093231611976</span><span class="p">,</span>
</span><span class="line"><span class="m">-0.846910593628984</span><span class="p">,</span> <span class="m">-0.341577057278408</span><span class="p">,</span> <span class="m">0.293087562336535</span><span class="p">),</span> b <span class="o">=</span> <span class="kt">c</span><span class="p">(</span><span class="s">&quot;A&quot;</span><span class="p">,</span>
</span><span class="line"><span class="s">&quot;B&quot;</span><span class="p">,</span> <span class="s">&quot;C&quot;</span><span class="p">,</span> <span class="s">&quot;D&quot;</span><span class="p">,</span> <span class="s">&quot;E&quot;</span><span class="p">,</span> <span class="s">&quot;F&quot;</span><span class="p">,</span> <span class="s">&quot;G&quot;</span><span class="p">,</span> <span class="s">&quot;H&quot;</span><span class="p">,</span> <span class="s">&quot;I&quot;</span><span class="p">,</span> <span class="s">&quot;J&quot;</span><span class="p">)),</span> <span class="m">.</span>Names <span class="o">=</span> <span class="kt">c</span><span class="p">(</span><span class="s">&quot;a&quot;</span><span class="p">,</span>
</span><span class="line"><span class="s">&quot;b&quot;</span><span class="p">),</span> row.names <span class="o">=</span> <span class="kt">c</span><span class="p">(</span><span class="kc">NA</span><span class="p">,</span> <span class="m">-10L</span><span class="p">),</span> class <span class="o">=</span> <span class="s">&quot;data.frame&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chapter 4 Bulid Functional Data Objects]]></title>
    <link href="http://YunlongNie.github.io/blog/2014/10/16/chapter-4-bulid-functional-data-objects/"/>
    <updated>2014-10-16T22:44:57-07:00</updated>
    <id>http://YunlongNie.github.io/blog/2014/10/16/chapter-4-bulid-functional-data-objects</id>
    <content type="html"><![CDATA[<h1 id="object-of-the-functional-data-class-fd-in-r">object of the <em>functional data</em> class <code>fd</code> in R</h1>

<p>An object of fd combines the coefficients with the basis system. In the previous post, we learned that <code>create.bspline.basis</code> entable one create a system of bsplines. The object class is <strong>fdbasis</strong>. </p>

<h2 id="add-coefficients-to-the-fdbasis-to-obtain-a-functional-data-object-fd">add coefficients to the <strong>fdbasis</strong> to obtain a functional data object <strong>fd</strong>.</h2>

<p>Use the function <code>fd()</code> in R. </p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">tempfd = fd(coefmat,bspline_temp)
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Note that adding coefficients in is different from evaluate a bspline system at a given time point $t$. Suppose $f(x)$ is approximated by a bspline system with basis functions denoted by $\phi_i(x)$. That is, 
<script type="math/tex">f(x) \approx \sum_{i=1}^m \beta_i \phi_i(x). </script></p>

<p>Thus, evaluating $f(t)$ means that given $t = t_0$ compute $f(t_0)$, which is essentially a vector. Each element in the vector stands for the basis function value when $t = t_0$, i.e., $\phi_i(t_0)$. On the other hand, supply coefficients into the bspline system amounts to given the value of $\beta_i$.  Once the coefficients are given, one can evaluate the smoothing system as a single function given $t=t_0$ using R function <code>eval.fd()</code>. </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
</pre></td><td class="code"><pre><code class="R"><span class="line">unitRng <span class="o">=</span> <span class="kt">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">)</span>
</span><span class="line">bspl2 <span class="o">=</span> create.bspline.basis<span class="p">(</span>unitRng<span class="p">,</span> norder<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class="line">tstFn1 <span class="o">=</span> fd<span class="p">(</span><span class="kt">c</span><span class="p">(</span><span class="m">-1</span><span class="p">,</span> <span class="m">2</span><span class="p">),</span> bspl2<span class="p">)</span>
</span><span class="line">t0 <span class="o">=</span> <span class="kp">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">,</span>by<span class="o">=</span><span class="m">0.2</span><span class="p">)</span>
</span><span class="line">eval.fd<span class="p">(</span>t0<span class="p">,</span>tstFn1<span class="p">)</span>
</span><span class="line">     reps <span class="m">1</span>
</span><span class="line"><span class="p">[</span><span class="m">1</span><span class="p">,]</span>   <span class="m">-1.0</span>
</span><span class="line"><span class="p">[</span><span class="m">2</span><span class="p">,]</span>   <span class="m">-0.4</span>
</span><span class="line"><span class="p">[</span><span class="m">3</span><span class="p">,]</span>    <span class="m">0.2</span>
</span><span class="line"><span class="p">[</span><span class="m">4</span><span class="p">,]</span>    <span class="m">0.8</span>
</span><span class="line"><span class="p">[</span><span class="m">5</span><span class="p">,]</span>    <span class="m">1.4</span>
</span><span class="line"><span class="p">[</span><span class="m">6</span><span class="p">,]</span>    <span class="m">2.0</span>
</span><span class="line"><span class="o">&gt;</span> eval.fd<span class="p">(</span>t0<span class="p">,</span>tstFn1<span class="p">,</span><span class="m">1</span><span class="p">)</span> <span class="c1"># evaluate the function data object tstFn1 first derivative. </span>
</span><span class="line">     reps <span class="m">1</span>
</span><span class="line"><span class="p">[</span><span class="m">1</span><span class="p">,]</span>      <span class="m">3</span>
</span><span class="line"><span class="p">[</span><span class="m">2</span><span class="p">,]</span>      <span class="m">3</span>
</span><span class="line"><span class="p">[</span><span class="m">3</span><span class="p">,]</span>      <span class="m">3</span>
</span><span class="line"><span class="p">[</span><span class="m">4</span><span class="p">,]</span>      <span class="m">3</span>
</span><span class="line"><span class="p">[</span><span class="m">5</span><span class="p">,]</span>      <span class="m">3</span>
</span><span class="line"><span class="p">[</span><span class="m">6</span><span class="p">,]</span>      <span class="m">0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="linear-differential-operator-or-lfd-class">Linear Differential Operator or <em>Lfd</em> Class</h2>

<p>The notation $Lx$ refers to the application of a linear differential operator L to a function $x$. In general, 
<script type="math/tex">Lx(t) = \beta_0(t) x(t) + \beta_1(t) Dx(t) + \ldots + \beta_{m-1}(t) D^{m-1} x(t)+ D^{m} x(t) </script></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chapter 3 fdaWithRMat]]></title>
    <link href="http://YunlongNie.github.io/blog/2014/10/16/chapter-3-fdawithrmat/"/>
    <updated>2014-10-16T21:51:57-07:00</updated>
    <id>http://YunlongNie.github.io/blog/2014/10/16/chapter-3-fdawithrmat</id>
    <content type="html"><![CDATA[<h1 id="create-bspline-basis-functions">create bspline basis functions</h1>

<p>There are normally four relevant arguments that defines a bspline basis system. </p>

<ol>
  <li>rangeval: gives the range of the bspline functions</li>
  <li>nbasis: the number of basis functions in total</li>
  <li>norder: the order of the bspline, which equals one plus the degree. the default is set to be 4, i.e., cubic splines</li>
  <li>breaks: the breaking points. It must satisfy that the first and last breaks are the boundary of the rangeval. For example, the code below specifies a bspline system with 13 basis functions. Each basis function is a cubic polynomial function. </li>
  <li>In fact, one <strong>only</strong> needs to gives breaks and norder, then the function will know the nbasis, since nbasis = order + number of internal knots.</li>
</ol>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">bspline_temp = create.bspline.basis(rangeval = c(0,10), nbasis = 13,norder=4,breaks = 0:10)</span></code></pre></td></tr></table></div></figure></notextile></div>

<ol>
  <li>one property of bspline basis system is that the sum of B-spline basis function at any given time t sum up to 1. </li>
</ol>

<h1 id="evaluate-bspline-system-at-given-time-points">evaluate bspline system at given time points</h1>

<p>Once the bspline system is created, one might be interested in checking each basis function values at a given time t. This can be achieved by <code>eval.basis</code> function in R. It also computes derivatives when a third argument <code>Lfdobj</code> is given. In R, <code>predict</code> function can also do the same thing. </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
</pre></td><td class="code"><pre><code class="R"><span class="line">eval.basis<span class="p">(</span>evalarg<span class="o">=</span><span class="m">1</span><span class="o">:</span><span class="m">3</span><span class="p">,</span>bspline_temp<span class="p">)</span>
</span><span class="line">eval.basis<span class="p">(</span>evalarg<span class="o">=</span><span class="m">1</span><span class="o">:</span><span class="m">3</span><span class="p">,</span>bspline_temp<span class="p">)[,</span><span class="m">1</span><span class="o">:</span><span class="m">6</span><span class="p">]</span>
</span><span class="line">     bspl4.1 bspl4.2   bspl4.3   bspl4.4   bspl4.5   bspl4.6
</span><span class="line"><span class="p">[</span><span class="m">1</span><span class="p">,]</span>       <span class="m">0</span>    <span class="m">0.25</span> <span class="m">0.5833333</span> <span class="m">0.1666667</span> <span class="m">0.0000000</span> <span class="m">0.0000000</span>
</span><span class="line"><span class="p">[</span><span class="m">2</span><span class="p">,]</span>       <span class="m">0</span>    <span class="m">0.00</span> <span class="m">0.1666667</span> <span class="m">0.6666667</span> <span class="m">0.1666667</span> <span class="m">0.0000000</span>
</span><span class="line"><span class="p">[</span><span class="m">3</span><span class="p">,]</span>       <span class="m">0</span>    <span class="m">0.00</span> <span class="m">0.0000000</span> <span class="m">0.1666667</span> <span class="m">0.6666667</span> <span class="m">0.1666667</span>
</span><span class="line"><span class="kp">rowSums</span><span class="p">(</span>eval.basis<span class="p">(</span>evalarg<span class="o">=</span><span class="m">1</span><span class="o">:</span><span class="m">3</span><span class="p">,</span>bspline_temp<span class="p">))</span>
</span><span class="line"><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">1</span> <span class="m">1</span> <span class="m">1</span>
</span><span class="line">eval.basis<span class="p">(</span>evalarg<span class="o">=</span><span class="m">1</span><span class="o">:</span><span class="m">3</span><span class="p">,</span>bspline_temp<span class="p">,</span>Lfdobj<span class="o">=</span><span class="m">1</span><span class="p">)</span>
</span><span class="line">     bspl4.1 bspl4.2 bspl4.3 bspl4.4 bspl4.5 bspl4.6 bspl4.7 bspl4.8
</span><span class="line"><span class="p">[</span><span class="m">1</span><span class="p">,]</span>       <span class="m">0</span>   <span class="m">-0.75</span>    <span class="m">0.25</span>     <span class="m">0.5</span>     <span class="m">0.0</span>     <span class="m">0.0</span>       <span class="m">0</span>       <span class="m">0</span>
</span><span class="line"><span class="p">[</span><span class="m">2</span><span class="p">,]</span>       <span class="m">0</span>    <span class="m">0.00</span>   <span class="m">-0.50</span>     <span class="m">0.0</span>     <span class="m">0.5</span>     <span class="m">0.0</span>       <span class="m">0</span>       <span class="m">0</span>
</span><span class="line"><span class="p">[</span><span class="m">3</span><span class="p">,]</span>       <span class="m">0</span>    <span class="m">0.00</span>    <span class="m">0.00</span>    <span class="m">-0.5</span>     <span class="m">0.0</span>     <span class="m">0.5</span>       <span class="m">0</span>       <span class="m">0</span>
</span><span class="line"><span class="c1"># using predict function</span>
</span><span class="line"><span class="o">&gt;</span> predict<span class="p">(</span>bspline_temp<span class="p">,</span><span class="m">1</span><span class="o">:</span><span class="m">3</span><span class="p">,</span><span class="m">1</span><span class="p">)</span>
</span><span class="line">     bspl4.1 bspl4.2 bspl4.3 bspl4.4 bspl4.5 bspl4.6 bspl4.7 bspl4.8
</span><span class="line"><span class="p">[</span><span class="m">1</span><span class="p">,]</span>       <span class="m">0</span>   <span class="m">-0.75</span>    <span class="m">0.25</span>     <span class="m">0.5</span>     <span class="m">0.0</span>     <span class="m">0.0</span>       <span class="m">0</span>       <span class="m">0</span>
</span><span class="line"><span class="p">[</span><span class="m">2</span><span class="p">,]</span>       <span class="m">0</span>    <span class="m">0.00</span>   <span class="m">-0.50</span>     <span class="m">0.0</span>     <span class="m">0.5</span>     <span class="m">0.0</span>       <span class="m">0</span>       <span class="m">0</span>
</span><span class="line"><span class="p">[</span><span class="m">3</span><span class="p">,]</span>       <span class="m">0</span>    <span class="m">0.00</span>    <span class="m">0.00</span>    <span class="m">-0.5</span>     <span class="m">0.0</span>     <span class="m">0.5</span>       <span class="m">0</span>       <span class="m">0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown Syntax]]></title>
    <link href="http://YunlongNie.github.io/blog/2014/10/14/markdown-cheat-sheet/"/>
    <updated>2014-10-14T23:00:57-07:00</updated>
    <id>http://YunlongNie.github.io/blog/2014/10/14/markdown-cheat-sheet</id>
    <content type="html"><![CDATA[<h1 id="markdown-cheet-sheet">Markdown Cheet Sheet</h1>

<p>Markdown is a powerful and simple approach to document blog postings. It enables one to write in a plain text format and transfers them into clean, web-standard HTMLs. </p>

<h2 id="headings">Headings</h2>
<p>Headings start with a <em>#</em> symbol. The largest one comes with one # and the second large one with 2 #. </p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line"># Markdown Syntax
</span><span class="line">## Headings</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="paragraphs">Paragraphs</h2>
<p>Like latex, new paragraph is seperated with the previous one using a blank row in between. </p>

<p>This is another paragraph. </p>

<h2 id="bold-and-itshape">Bold and itshape</h2>

<p><strong>Bold</strong> on one word or serveral words together can be achieved by adding ** on two sides. </p>

<p><em>itshape</em> is done by adding one * on each side of the word. </p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">this is a **bold** 
</span><span class="line">this is a *itshape*</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="latex">Latex</h2>

<p><a href="http://lc0.github.io/blog/2013/11/01/scientific-octopress-writing-latex-formulas-and-r-code/">this is a post for using latex code in octopress</a>
<script type="math/tex">% &lt;![CDATA[

\begin{align}
\mbox{Union: } & A\cup B = \{x\mid x\in A \mbox{ or } x\in B\} \\
\int_{t=1}^\alpha & \bigg \{xy\mid x\in A \mbox{ and } y\in B\bigg\} \\
\mbox{Star: } & A^\star  = \{x_1x_2\ldots x_k \mid  k\geq 0 \mbox{ and each } x_i\in A\} \\
\end{align}
 %]]&gt;</script></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$$
</span><span class="line">\begin{align}
</span><span class="line">\mbox{Union: } &amp; A\cup B = \{x\mid x\in A \mbox{ or } x\in B\} \\
</span><span class="line">\int_{t=1}^\alpha &amp; \bigg \{xy\mid x\in A \mbox{ and } y\in B\bigg\} \\
</span><span class="line">\mbox{Star: } &amp; A^\star  = \{x_1x_2\ldots x_k \mid  k\geq 0 \mbox{ and each } x_i\in A\} \\
</span><span class="line">\end{align}
</span><span class="line">$$</span></code></pre></td></tr></table></div></figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Start]]></title>
    <link href="http://YunlongNie.github.io/blog/2014/10/14/chapter-1/"/>
    <updated>2014-10-14T22:47:44-07:00</updated>
    <id>http://YunlongNie.github.io/blog/2014/10/14/chapter-1</id>
    <content type="html"><![CDATA[<p>This is the first post. I will try to maintain this blog as often as I can. Hopefully, it grows as my PhD goes. </p>

]]></content>
  </entry>
  
</feed>
